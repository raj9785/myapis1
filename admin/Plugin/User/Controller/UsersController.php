<?php/** * @license MIT License (http://www.opensource.org/licenses/mit-license.php) * * PHP version 5 * CakePHP version 1.3 *//** * Fares Users Controller * * @package Fares * @subpackage users.controllers */class UsersController extends UserAppController {    /**     * Controller name     *     * @var string     */    var $name = 'Users';    /**     * Helpers     *     * @var array     */    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');//public $paginate = array('limit'=>5,'order'=>'Country.id','page'=>1);    /**     * Components     *     * @var array     */    public $components = array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');    public $presetVars = array(        array('field' => 'access_right_category_id', 'type' => 'value'),       // array('field' => 'email', 'type' => 'value'),       // array('field' => 'firstname', 'type' => 'value'),    );// public $presetVars = 	true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('model', $this->modelClass);    }    function index() {        $this->set('tab_open', 'accessrightuser');        $page = ((isset($this->params['named']['page']) && $this->params['named']['page'] != NULL) ? $this->params['named']['page'] : 0);        $this->set('page', $page);// Pagging        $limit = 50;        if (!empty($this->data)) {            $this->Prg->commonProcess();        }        $this->set('limit', $limit);        $this->{$this->modelClass}->data[$this->modelClass] = $this->passedArgs;       //$this->{$this->modelClass}->parseCriteria($this->passedArgs);        $parsedConditions = array("user_role_id > 1");        if (@$this->params->named['from_date'] and @ $this->params->named['to_date']) {            array_push($parsedConditions, array('(from_unixtime(User.created, "%Y-%m-%d") >= ? AND from_unixtime(User.created, "%Y-%m-%d") <= ?)' => array($this->params->named['from_date'], $this->params->named['to_date'])));        } else        if (@$this->params->named['from_date']) {            array_push($parsedConditions, array('from_unixtime(User.created, "%Y-%m-%d") >= ' => @$this->params->named['from_date']));        } else        if (@$this->params->named['to_date']) {            array_push($parsedConditions, array('from_unixtime(User.created, "%Y-%m-%d") <= ' => @$this->params->named['to_date']));        }        $this->set("from_date", @$this->params->named['from_date']);        $this->set("to_date", @$this->params->named['to_date']);         $this->User->bindModel(array('belongsTo' => array('AccessRightCategory')));        $this->paginate = array(            'conditions' => array($parsedConditions),            'limit' => $limit,            'order' => array($this->modelClass . '.id' => 'desc'),                    );        $this->set('parsedConditions', $parsedConditions);       //pr($this->paginate());        $this->set('result', $this->paginate());        $this->loadModel('AccessRightCategory');        $AccessRightCategory = $this->AccessRightCategory->find("list", array('order' => array('AccessRightCategory.created' => 'asc')));        $this->set("AccessRightCategorys", $AccessRightCategory);        if (isset($this->passedArgs['access_right_category_id']) && !empty($this->passedArgs['access_right_category_id'])) {            $category_id = $this->passedArgs['access_right_category_id'];            $this->set('category_id', $category_id);        }                              if (isset($this->passedArgs['email']) && !empty($this->passedArgs['email'])) {            $email = $this->passedArgs['email'];            $this->set('email', $email);        }        if (isset($this->passedArgs['firstname']) && !empty($this->passedArgs['firstname'])) {            $firstname = $this->passedArgs['firstname'];            $this->set('firstname', $firstname);        }        $this->set('title_for_layout', 'User Details');    }    public function change_status_active() {        if ($this->request->is('Ajax')) {            if ($this->data['id'] != null) {                $data['status'] = 1;                $this->{$this->modelClass}->id = $this->data['id'];                $this->{$this->modelClass}->save($data, false);                                echo json_encode(array('succ' => 1, 'msg' => 'Record Status has been changed.'));                die;            }        }        exit;    }    public function change_status_inactive() {        if ($this->request->is('Ajax')) {            if ($this->data['id'] != null) {                $data['status'] = 0;                $this->{$this->modelClass}->id = $this->data['id'];                $this->{$this->modelClass}->save($data, false);                               echo json_encode(array('succ' => 1, 'msg' => 'Record Status has been changed.'));                die;            }        }        exit;    }    public function deleterow() {        if ($this->request->is('Ajax')) {            if ($this->data['id'] != null) {                $data = $this->{$this->modelClass}->findById($this->data['id']);                if (!empty($data)) {                    if ($this->{$this->modelClass}->delete($this->data['id'])) {                        echo json_encode(array('succ' => 1, 'msg' => 'Record has been deleted'));                        die;                    }                }            }        }        exit;    }    function add($cate_id = 0) {        $this->set('tab_open', 'accessrightuser');        $this->loadModel('AccessRightCategory');        $access_right_category = $this->AccessRightCategory->find('list');        $this->set('access_right_category', $access_right_category);//pr($access_right_category);        if (!empty($this->data)) {//	pr($this->data); die;            $this->{$this->modelClass}->set($this->data);            //if ($this->{$this->modelClass}->CheckValidUser()) {                $data['access_right_category_id'] = $this->data['User']['access_right_category_id'];                $data['username'] = $this->data['User']['mobile'];                $data['firstname'] = $this->data['User']['firstname'];                $data['lastname'] = $this->data['User']['lastname'];                $data['email'] = $this->data['User']['email'];                $data['user_role_id'] = 2;                $pass = $this->data['User']['mobile'];                $data['password'] = AuthComponent::password($pass);                $data['status'] = 1;                $data['created']=date("Y-m-d H:i:s");                if ($this->{$this->modelClass}->save($data, false)) {                    $userid = $this->{$this->modelClass}->id;                    //$phone_no = "91" . $this->data['User']['mobile'];                    ////$msg = "Welcome to Super Cabz! Your Username is " . $this->data['User']['username'] . " and Password is " . $pass;                    // $this->send_message($phone_no, $msg);                    $this->Session->setFlash('User has been added.', 'success');                    $this->redirect(array('action' => 'index'));                }            //}        }        $this->set('title_for_layout', 'Add New User');    }    function edit($id = null) {        $this->set('tab_open', 'accessrightuser');        $pages[__('Dashboard', true)] = array('plugin' => false, 'controller' => '/');        $breadcrumb = array('pages' => $pages, 'active' => __('Access Rights User Management', true));        $this->set('breadcrumb', $breadcrumb);        $pageHeading = 'Access Rights User Management';        $this->set('pageHeading', $pageHeading);        $this->loadModel('AccessRightCategory');        $access_right_category = $this->AccessRightCategory->find('list');        $this->set('access_right_category', $access_right_category);        $this->set('id', $id);        $user = $this->{$this->modelClass}->findById($id);        $this->{$this->modelClass}->set($user);        $this->set('record', $user);//$this->set('cate_id', $cate_id);        if (!empty($this->data)) {            $this->{$this->modelClass}->id = $id;            $this->{$this->modelClass}->set($this->data);            if ($this->{$this->modelClass}->CheckValidUser()) {//pr($this->data); die;                $accessdata['access_right_category_id'] = $this->data['User']['access_right_category_id'];                $accessdata['username'] = $this->data['User']['mobile'];                $accessdata['firstname'] = $this->data['User']['firstname'];                $accessdata['lastname'] = $this->data['User']['lastname'];                $accessdata['email'] = $this->data['User']['email'];                $accessdata['mobile'] = $this->data['User']['mobile'];//pr($accessdata); die;                if ($this->{$this->modelClass}->save($accessdata, false)) {                    $userid = $this->{$this->modelClass}->id;                                        $this->Session->setFlash('User has been updated.', 'success');                    $this->redirect(array('action' => 'index'));                }            }        } else {            $this->request->data = $this->{$this->modelClass}->read();            unset($this->request->data['User']['password']);//pr($this->request->data);        }        $this->set('title_for_layout', 'Edit User');    }}